name: Bump version

on:
  workflow_dispatch:
    inputs:
      version_number:
        description: "New version number (Ex 1.2.3)"
        required: true

jobs:
  bump_version:
    name: Bump version
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    env:
      _VERSION_NUMBER: ${{ inputs.version_number }}

    steps:
      - name: Setup and validate version number
        id: setup
        run: |
          if ! [[ "$_VERSION_NUMBER" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version number ($_VERSION_NUMBER) is not in semantic version format (X.Y.Z)"
            exit 1
          fi
          echo "branch_name=version_bump_$_VERSION_NUMBER" >> "$GITHUB_OUTPUT"

      - name: Check out repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: true

      - name: Log in to Azure
        uses: bitwarden/gh-actions/azure-login@main
        with:
          subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          client_id: ${{ secrets.AZURE_CLIENT_ID }}

      - name: Retrieve secrets
        id: retrieve-secrets
        uses: bitwarden/gh-actions/get-keyvault-secrets@main
        with:
          keyvault: "bitwarden-ci"
          secrets: "github-gpg-private-key, github-gpg-private-key-passphrase"

      - name: Log out from Azure
        uses: bitwarden/gh-actions/azure-logout@main

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@e89d40939c28e39f97cf32126055eeae86ba74ec # v6.3.0
        with:
          gpg_private_key: ${{ steps.retrieve-secrets.outputs.github-gpg-private-key }}
          passphrase: ${{ steps.retrieve-secrets.outputs.github-gpg-private-key-passphrase }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Create branch
        env:
          BRANCH_NAME: "${{ steps.setup.outputs.branch_name }}"
        run: git switch -c "$BRANCH_NAME"

      - name: Bump version
        run: |
          sed -i "s/^VERSION ?= .*/VERSION ?= $_VERSION_NUMBER/" Makefile

      - name: Set up Git
        run: |
          git config --local user.email "106330231+bitwarden-devops-bot@users.noreply.github.com"
          git config --local user.name "bitwarden-devops-bot"

      - name: Check if version changed
        id: version-changed
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changes_to_commit=TRUE" >> "$GITHUB_OUTPUT"
          else
            echo "changes_to_commit=FALSE" >> "$GITHUB_OUTPUT"
            echo "No changes to commit!";
          fi

      - name: Commit files
        if: ${{ steps.version-changed.outputs.changes_to_commit == 'TRUE' }}
        run: git commit -m "Bumped version to $_VERSION_NUMBER" -a

      - name: Push changes
        if: ${{ steps.version-changed.outputs.changes_to_commit == 'TRUE' }}
        env:
          BRANCH_NAME: "${{ steps.setup.outputs.branch_name }}"
        run: git push -u origin "$BRANCH_NAME"

      - name: Create version PR
        if: ${{ steps.version-changed.outputs.changes_to_commit == 'TRUE' }}
        id: create-pr
        env:
          PR_BRANCH: "${{ steps.setup.outputs.branch_name }}"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          BASE_BRANCH: main
          TITLE: "Bump version to ${{ env._VERSION_NUMBER }}"
        run: |
          gh pr create --title "$TITLE" \
            --base "$BASE" \
            --head "$PR_BRANCH" \
            --body "
              ## Type of change
              - [ ] Bug fix
              - [ ] New feature development
              - [ ] Tech debt (refactoring, code cleanup, dependency upgrades, etc)
              - [ ] Build/deploy pipeline (DevOps)
              - [X] Other

              ## Objective
              Automated version bump to $_VERSION_NUMBER"
