name: Build for GitHub Container Registry

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  build-docker:
    name: Build Docker images
    runs-on: ubuntu-22.04
    env:
      _GHCR_REGISTRY: ghcr.io/bitwarden
      _PROJECT_NAME: sm-operator

    steps:
      - name: Check out repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@4574d27a4764455b42196d70a065bc6853246a25 # v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca # v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Test operator
        id: test
        run: |
          sudo apt update && sudo apt install musl-tools -y
          make setup
          make test

      - name: Upload to codecov.io
        uses: codecov/codecov-action@ad3126e916f78f00edff4ed0317cf185271ccc2d # v5.4.2

      - name: Generate Docker image tag
        id: tag
        run: |
          IMAGE_TAG=$(echo "${GITHUB_REF:11}" | sed "s#/#-#g")  # slash safe branch name
          if [[ "$IMAGE_TAG" == "main" ]]; then
            IMAGE_TAG=dev
          fi
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Generate image full name
        id: image-name
        env:
          IMAGE_TAG: ${{ steps.tag.outputs.image_tag }}
        run: echo "name=${_GHCR_REGISTRY}/${_PROJECT_NAME}:${IMAGE_TAG}" >> $GITHUB_OUTPUT

      - name: Build Docker image
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1 # v6.16.0
        with:
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.image-name.outputs.name }}

      - name: Create kind cluster
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0

      - name: Smoke test image
        id: smoke-test
        env:
          IMAGE: ${{ steps.image-name.outputs.name }}
        run: |
          make deploy IMG=$IMAGE

          count=0
          while [[ $(kubectl get pods -n sm-operator-system -l control-plane=controller-manager -o jsonpath="{.items[*].status.containerStatuses[*].ready}") != "true" ]]; do
            sleep 1;
            count=$count+1
            if [[ count -ge 30 ]]; then
              break
            fi
          done

          #For review purposes
          echo "*****DEPLOYMENTS*****"
          kubectl get deployments -n sm-operator-system

          echo "*****PODS*****"
          pods=$(kubectl get pods -n sm-operator-system -l control-plane=controller-manager | grep 2/2)
          echo $pods

          if [[ -z "$pods" ]]; then
            echo "::error::No pods found."
            exit 1
          fi

          echo "*****OPERATOR OK*****"

      - name: Clean up
        run: |
          make undeploy
          kind delete cluster
