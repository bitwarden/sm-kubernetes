// Code generated by MockGen. DO NOT EDIT.
// Source: internal/controller/bitwardenclient_factory.go
//
// Generated by this command:
//
//	mockgen -source internal/controller/bitwardenclient_factory.go -destination internal/controller/bitwardenclient_factory_mock.go
//

// Package mock_controller is a generated GoMock package.
package controller_test_mocks

import (
	reflect "reflect"

	sdk "github.com/bitwarden/sdk-go"
	gomock "go.uber.org/mock/gomock"
)

// MockBitwardenClientFactory is a mock of BitwardenClientFactory interface.
type MockBitwardenClientFactory struct {
	ctrl     *gomock.Controller
	recorder *MockBitwardenClientFactoryMockRecorder
}

// MockBitwardenClientFactoryMockRecorder is the mock recorder for MockBitwardenClientFactory.
type MockBitwardenClientFactoryMockRecorder struct {
	mock *MockBitwardenClientFactory
}

// NewMockBitwardenClientFactory creates a new mock instance.
func NewMockBitwardenClientFactory(ctrl *gomock.Controller) *MockBitwardenClientFactory {
	mock := &MockBitwardenClientFactory{ctrl: ctrl}
	mock.recorder = &MockBitwardenClientFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBitwardenClientFactory) EXPECT() *MockBitwardenClientFactoryMockRecorder {
	return m.recorder
}

// GetApiUrl mocks base method.
func (m *MockBitwardenClientFactory) GetApiUrl() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetApiUrl")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetApiUrl indicates an expected call of GetApiUrl.
func (mr *MockBitwardenClientFactoryMockRecorder) GetApiUrl() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetApiUrl", reflect.TypeOf((*MockBitwardenClientFactory)(nil).GetApiUrl))
}

// GetBitwardenClient mocks base method.
func (m *MockBitwardenClientFactory) GetBitwardenClient() (sdk.BitwardenClientInterface, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBitwardenClient")
	ret0, _ := ret[0].(sdk.BitwardenClientInterface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBitwardenClient indicates an expected call of GetBitwardenClient.
func (mr *MockBitwardenClientFactoryMockRecorder) GetBitwardenClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBitwardenClient", reflect.TypeOf((*MockBitwardenClientFactory)(nil).GetBitwardenClient))
}

// GetIdentityApiUrl mocks base method.
func (m *MockBitwardenClientFactory) GetIdentityApiUrl() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIdentityApiUrl")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetIdentityApiUrl indicates an expected call of GetIdentityApiUrl.
func (mr *MockBitwardenClientFactoryMockRecorder) GetIdentityApiUrl() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIdentityApiUrl", reflect.TypeOf((*MockBitwardenClientFactory)(nil).GetIdentityApiUrl))
}
