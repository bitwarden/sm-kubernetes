// Code generated by MockGen. DO NOT EDIT.
// Source: bw-sdk/secrets.go
//
// Generated by this command:
//
//	mockgen -source bw-sdk/secrets.go -destination secrets_mock.go
//

// Package mock_sdk is a generated GoMock package.
package controller_test_mocks

import (
	reflect "reflect"
	"time"

	sdk "github.com/bitwarden/sdk-go"
	gomock "go.uber.org/mock/gomock"
)

// MockSecretsInterface is a mock of SecretsInterface interface.
type MockSecretsInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSecretsInterfaceMockRecorder
}

// MockSecretsInterfaceMockRecorder is the mock recorder for MockSecretsInterface.
type MockSecretsInterfaceMockRecorder struct {
	mock *MockSecretsInterface
}

// NewMockSecretsInterface creates a new mock instance.
func NewMockSecretsInterface(ctrl *gomock.Controller) *MockSecretsInterface {
	mock := &MockSecretsInterface{ctrl: ctrl}
	mock.recorder = &MockSecretsInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecretsInterface) EXPECT() *MockSecretsInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockSecretsInterface) Create(key, value, note, organizationID string, projectIDs []string) (*sdk.SecretResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", key, value, note, organizationID, projectIDs)
	ret0, _ := ret[0].(*sdk.SecretResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockSecretsInterfaceMockRecorder) Create(key, value, note, organizationID, projectIDs any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockSecretsInterface)(nil).Create), key, value, note, organizationID, projectIDs)
}

// Delete mocks base method.
func (m *MockSecretsInterface) Delete(secretIDs []string) (*sdk.SecretsDeleteResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", secretIDs)
	ret0, _ := ret[0].(*sdk.SecretsDeleteResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete.
func (mr *MockSecretsInterfaceMockRecorder) Delete(secretIDs any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockSecretsInterface)(nil).Delete), secretIDs)
}

// Get mocks base method.
func (m *MockSecretsInterface) Get(secretID string) (*sdk.SecretResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", secretID)
	ret0, _ := ret[0].(*sdk.SecretResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockSecretsInterfaceMockRecorder) Get(secretID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockSecretsInterface)(nil).Get), secretID)
}

// GetByIDS mocks base method.
func (m *MockSecretsInterface) GetByIDS(secretIDs []string) (*sdk.SecretsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByIDS", secretIDs)
	ret0, _ := ret[0].(*sdk.SecretsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByIDS indicates an expected call of GetByIDS.
func (mr *MockSecretsInterfaceMockRecorder) GetByIDS(secretIDs any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByIDS", reflect.TypeOf((*MockSecretsInterface)(nil).GetByIDS), secretIDs)
}

// List mocks base method.
func (m *MockSecretsInterface) List(organizationID string) (*sdk.SecretIdentifiersResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", organizationID)
	ret0, _ := ret[0].(*sdk.SecretIdentifiersResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockSecretsInterfaceMockRecorder) List(organizationID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockSecretsInterface)(nil).List), organizationID)
}

// Sync mocks base method.
func (m *MockSecretsInterface) Sync(organizationID string, lastSyncedDate *time.Time) (*sdk.SecretsSyncResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Sync", organizationID, lastSyncedDate)
	ret0, _ := ret[0].(*sdk.SecretsSyncResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Sync indicates an expected call of Sync.
func (mr *MockSecretsInterfaceMockRecorder) Sync(organizationID any, lastSyncedDate any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Sync", reflect.TypeOf((*MockSecretsInterface)(nil).Sync), organizationID, lastSyncedDate)
}

// Update mocks base method.
func (m *MockSecretsInterface) Update(secretID, key, value, note, organizationID string, projectIDs []string) (*sdk.SecretResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", secretID, key, value, note, organizationID, projectIDs)
	ret0, _ := ret[0].(*sdk.SecretResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockSecretsInterfaceMockRecorder) Update(secretID, key, value, note, organizationID, projectIDs any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockSecretsInterface)(nil).Update), secretID, key, value, note, organizationID, projectIDs)
}
